#[cfg(target_arch = "wasm32")]
use wasm_bindgen_test::*;

use crate::{
    cairo_run::{cairo_run, CairoRunConfig},
    hint_processor::{
        builtin_hint_processor::builtin_hint_processor_definition::BuiltinHintProcessor,
        hint_processor_definition::HintProcessorLogic,
    },
    vm::{
        errors::hint_errors::HintError,
        runners::cairo_runner::{ResourceTracker, RunResources},
    },
};

struct SimplifiedOsHintProcessor {
    builtin_hint_processor: BuiltinHintProcessor,
    run_resources: RunResources,
}

impl ResourceTracker for SimplifiedOsHintProcessor {
    fn consumed(&self) -> bool {
        self.run_resources.consumed()
    }

    fn consume_step(&mut self) {
        self.run_resources.consume_step()
    }

    fn get_n_steps(&self) -> Option<usize> {
        self.run_resources.get_n_steps()
    }

    fn run_resources(&self) -> &RunResources {
        &self.run_resources
    }
}

impl Default for SimplifiedOsHintProcessor {
    fn default() -> Self {
        Self {
            builtin_hint_processor: BuiltinHintProcessor::new_empty(),
            run_resources: Default::default(),
        }
    }
}

impl HintProcessorLogic for SimplifiedOsHintProcessor {
    fn execute_hint(
        &mut self,
        _vm: &mut crate::vm::vm_core::VirtualMachine,
        _exec_scopes: &mut crate::types::exec_scope::ExecutionScopes,
        //Data structure that can be downcasted to the structure generated by compile_hint
        _hint_data: &Box<dyn core::any::Any>,
        //Constant values extracted from the program specification.
        _constants: &std::collections::HashMap<String, felt::Felt252>,
    ) -> Result<(), crate::vm::errors::hint_errors::HintError> {
        // Empty impl as we are using `execute_hint_extensive` instead for this case
        Ok(())
    }

    fn execute_hint_extensive(
        &mut self,
        vm: &mut crate::vm::vm_core::VirtualMachine,
        exec_scopes: &mut crate::types::exec_scope::ExecutionScopes,
        //Data structure that can be downcasted to the structure generated by compile_hint
        hint_data: &Box<dyn core::any::Any>,
        //Constant values extracted from the program specification.
        constants: &std::collections::HashMap<String, felt::Felt252>,
    ) -> Result<
        crate::hint_processor::hint_processor_definition::HintExtension,
        crate::vm::errors::hint_errors::HintError,
    > {
        // First attempt to execute with builtin hint processor
        match self.builtin_hint_processor.execute_hint_extensive(
            vm,
            exec_scopes,
            hint_data,
            constants,
        ) {
            Err(HintError::UnknownHint(_)) => {}
            res => return res,
        }
        panic!("Oh no")
    }
}

#[test]
#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
fn run_deprecated_cc() {
    let mut hint_processor = SimplifiedOsHintProcessor::default();
    let program_content =
        include_bytes!("../../../cairo_programs/noretrocompat/starknet_os_deprecated_cc.json");
    let _ = cairo_run(
        program_content,
        &CairoRunConfig::default(),
        &mut hint_processor,
    )
    .unwrap();
}
