name: Test dependencies and cairo-vm install

on:
  merge_group:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

jobs:
  install:
    name: "Install on ${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: 'true'
          cache-on-failure: 'true'
          cache-directories: ./cairo/target/
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          # first one is ubuntu and second one macos
          path: |
            /home/runner/.cache/pip/wheels/
            /Users/runner/Library/Caches/pip/wheels/
          key: ${{ runner.os }}-python-install-${{ github.sha }}
          restore-keys: ${{ runner.os }}-python-install-

      - name: Install dependencies
        run: bash install.sh
      
      - name: Compile project
        run: cargo check

  install_debian:
    name: "Install on debian-11"
    runs-on: ubuntu-22.04
    container:
      image: debian:11
    defaults:
      run:
        shell: bash {0}

    steps:
      - uses: actions/checkout@v3

      # we don't use swatinem because rustc isn't installed yet
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${HOME}/.cargo/
            ./target/
            ./cairo/target/
          key: ${{ runner.os }}-install-${{ github.sha }}
          restore-keys: ${{ runner.os }}-install-
      
      - name: Enable pip cache
        run: |
          mkdir -p /github/home/.cache/pip
          chown -R 1000:1000 /github/home/.cache/pip
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            /github/home/.cache/pip/wheels
          key: ${{ runner.os }}-python-install-${{ github.sha }}
          restore-keys: ${{ runner.os }}-python-install-

      - name: Install dependencies
        run: bash install.sh

      - name: Compile project
        run: |
          . "$HOME/.cargo/env"
          cargo check
