var searchIndex = JSON.parse('{\
"cleopatra_cairo":{"doc":"","tn":["bigint","bigint64","bigint_str","cairo_run","math_utils","relocatable","serde","types","utils","vm","cairo_run","write_binary_memory","write_binary_trace","write_output","ec_add","ec_double","ec_double_slope","line_slope","deserialize_program","ApTracking","FlowTrackingData","HintParams","Identifier","ProgramJson","Reference","ReferenceManager","ValueAddress","accessible_scopes","ap_tracking","ap_tracking_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","clone","clone","clone","clone_into","clone_into","clone_into","code","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_array_of_bigint_hex","deserialize_bigint_hex","deserialize_map_to_string_and_bigint_hashmap","deserialize_program","deserialize_program_json","deserialize_value_address","eq","eq","eq","eq","eq","eq","flow_tracking_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","group","hints","identifiers","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","offset","offset","pc","pc","prime","reference_ids","reference_manager","references","register","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_address","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","errors","instruction","program","relocatable","program_errors","IO","Parse","ProgramError","borrow","borrow_mut","fmt","fmt","from","from","from","into","to_string","try_from","try_into","type_id","vzip","0","0","AP","AP","APPlus2","Add","Add","Add1","Add2","ApUpdate","AssertEq","Call","Dst","FP","FP","FpUpdate","Imm","Instruction","Jnz","Jump","JumpRel","Mul","NOp","Op0","Op1","Op1Addr","Opcode","PcUpdate","Register","Regular","Regular","Regular","Res","Ret","Unconstrained","ap_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","dst_register","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fp_update","from","from","from","from","from","from","from","from","imm","into","into","into","into","into","into","into","into","ne","off0","off1","off2","op0_register","op1_addr","opcode","pc_update","res","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Program","borrow","borrow_mut","builtins","clone","clone_into","data","from","hints","into","main","new","prime","to_owned","try_from","try_into","type_id","vzip","Int","MaybeRelocatable","Relocatable","RelocatableValue","add_int_mod","add_mod","add_usize_mod","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","from","from","hash","hash","into","into","ne","ne","offset","relocate_value","segment_index","sub","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","from_relocatable_to_indexes","is_subsequence","to_field_element","context","decoding","errors","hints","runners","trace","vm_core","vm_memory","run_context","RunContext","ap","borrow","borrow_mut","compute_dst_addr","compute_op0_addr","compute_op1_addr","fp","from","into","pc","prime","try_from","try_into","type_id","vzip","decoder","decode_instruction","cairo_run_errors","memory_errors","runner_errors","trace_errors","vm_errors","CairoRunError","Program","Runner","Trace","VirtualMachine","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","vzip","0","0","0","0","AddressNotRelocatable","EffectiveSizesNotCalled","FoundNonInt","InconsistentMemory","MemoryError","NumOutOfBounds","Relocation","UnallocatedSegment","borrow","borrow_mut","eq","fmt","fmt","from","into","ne","to_string","try_from","try_into","type_id","vzip","0","0","1","1","2","EcOpBuiltinScalarLimit","ExpectedInteger","FailedMemoryGet","FailedStringConversion","MemoryGet","MemoryInitializationError","MemoryValidationError","MissingMain","NoAP","NoExecBase","NoExecBaseForEntrypoint","NoFP","NoPC","NoProgBase","NonRelocatableAddress","RunnerError","UninitializedBase","WriteFail","borrow","borrow_mut","eq","fmt","fmt","from","into","ne","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","MemoryError","NoRelocationFound","RegNotRelocatable","TraceError","borrow","borrow_mut","eq","fmt","fmt","from","into","ne","to_string","try_from","try_into","type_id","vzip","0","CantWriteReturnFp","CantWriteReturnPc","DiffAssertValues","DiffIndexSub","ImmShouldBe1","InconsistentAutoDeduction","InvalidApUpdate","InvalidHintEncoding","InvalidInstructionEncoding","InvalidOp1Reg","InvalidOpcode","InvalidPcUpdate","InvalidRes","MemoryError","NoDst","NotImplemented","OffsetExeeded","PureValue","RelocatableAdd","RunnerError","UnconstrainedResAdd","UnconstrainedResAssertEq","UnconstrainedResJump","UnconstrainedResJumpRel","UnknownHint","UnknownOp0","VirtualMachineError","borrow","borrow_mut","eq","fmt","fmt","from","into","ne","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","execute_hint","hint_utils","execute_hint","add_segment","builtin_runner","cairo_runner","BitwiseBuiltinRunner","BuiltinRunner","EcOpBuiltinRunner","HashBuiltinRunner","OutputBuiltinRunner","RangeCheckBuiltinRunner","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","base","base","base","base","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","from","from","from","from","from","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","into","into","into","into","into","new","new","new","new","new","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CairoRunner","borrow","borrow_mut","from","initialize_main_entrypoint","initialize_segments","initialize_vm","into","new","relocate","relocated_memory","relocated_trace","run_until_pc","try_from","try_into","type_id","vm","vzip","write_output","trace_entry","RelocatedTraceEntry","TraceEntry","ap","ap","borrow","borrow","borrow_mut","borrow_mut","deserialize","eq","eq","fmt","fmt","fp","fp","from","from","into","into","ne","ne","pc","pc","relocate_trace_register","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Operands","VirtualMachine","_program_base","borrow","borrow","borrow_mut","borrow_mut","builtin_runners","eq","fmt","from","from","hints","into","into","memory","ne","new","prime","run_context","segments","step","trace","try_from","try_from","try_into","try_into","type_id","type_id","verify_auto_deductions","vzip","vzip","memory","memory_segments","0","Memory","ValidationRule","add_validation_rule","borrow","borrow","borrow_mut","borrow_mut","data","default","from","from","get","insert","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","validate_existing_memory","validated_addresses","validation_rules","vzip","vzip","MemorySegmentManager","add","borrow","borrow_mut","compute_effective_sizes","default","from","into","load_data","new","num_segments","relocate_segments","segment_used_sizes","try_from","try_into","type_id","vzip"],"q":["cleopatra_cairo","","","","","","","","","","cleopatra_cairo::cairo_run","","","","cleopatra_cairo::math_utils","","","","cleopatra_cairo::serde","cleopatra_cairo::serde::deserialize_program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::types","","","","cleopatra_cairo::types::errors","cleopatra_cairo::types::errors::program_errors","","","","","","","","","","","","","","","","cleopatra_cairo::types::errors::program_errors::ProgramError","","cleopatra_cairo::types::instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::types::program","","","","","","","","","","","","","","","","","","cleopatra_cairo::types::relocatable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::types::relocatable::MaybeRelocatable","","cleopatra_cairo::utils","","","cleopatra_cairo::vm","","","","","","","","cleopatra_cairo::vm::context","cleopatra_cairo::vm::context::run_context","","","","","","","","","","","","","","","","cleopatra_cairo::vm::decoding","cleopatra_cairo::vm::decoding::decoder","cleopatra_cairo::vm::errors","","","","","cleopatra_cairo::vm::errors::cairo_run_errors","","","","","","","","","","","","","","","","cleopatra_cairo::vm::errors::cairo_run_errors::CairoRunError","","","","cleopatra_cairo::vm::errors::memory_errors","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::errors::memory_errors::MemoryError","","","","","cleopatra_cairo::vm::errors::runner_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::errors::runner_errors::RunnerError","","","","","","cleopatra_cairo::vm::errors::trace_errors","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::errors::trace_errors::TraceError","cleopatra_cairo::vm::errors::vm_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::errors::vm_errors::VirtualMachineError","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::hints","","cleopatra_cairo::vm::hints::execute_hint","cleopatra_cairo::vm::hints::hint_utils","cleopatra_cairo::vm::runners","","cleopatra_cairo::vm::runners::builtin_runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::runners::cairo_runner","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::trace","cleopatra_cairo::vm::trace::trace_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::vm_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::vm_memory","","cleopatra_cairo::vm::vm_memory::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","cleopatra_cairo::vm::vm_memory::memory_segments","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Writes a trace as a binary file. Bincode encodes to little …","","Gets two points on an elliptic curve mod p and returns …","Doubles a point on an elliptic curve with the equation y^2 …","Computes the slope of an elliptic curve with the equation …","Computes the slope of the line connecting the two given EC …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Adds a bigint to self, then performs mod prime","Adds a MaybeRelocatable to self, then performs mod prime …","Adds a usize to self, then performs mod prime if prime is …","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Turns a MaybeRelocatable into a BigInt value If the value …","","Substracts two MaybeRelocatable values and returns the …","","","","","","","","","","","","","","","Converts val to an integer in the range (-prime/2, …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Decodes an instruction. The encoding is little endian, so …","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the builtin’s base","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates the necessary segments for the builtin in the …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Initializes state for running a program from the main() …","Creates the necessary segments for the program, execution, …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Writes the values hosted in the output builtin’s segment …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Makes sure that all assigned memory cells are consistent …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Inserts an MaybeRelocatable value into an address given by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Applies validation_rules to the current memory","","","","","","Adds a new segment and returns its starting location as a …","","","Calculates the size (number of non-none elements) of each …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Writes data into the memory at address ptr and returns the …","","","Returns a vector that contains the first relocated address …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,13,10,7,8,9,11,12,13,14,10,7,8,9,11,12,13,14,10,7,8,9,7,8,9,7,10,10,7,8,9,11,12,13,14,0,0,0,0,0,0,7,8,9,12,13,14,7,10,7,8,9,11,12,13,14,10,7,8,9,11,12,13,14,9,10,10,10,7,8,9,11,12,13,14,7,8,9,12,13,14,9,14,11,13,10,8,10,12,14,7,8,9,10,7,8,9,11,12,13,14,10,7,8,9,11,12,13,14,10,7,8,9,11,12,13,14,13,10,7,8,9,11,12,13,14,0,0,0,0,0,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,59,60,28,30,34,31,33,33,33,0,35,35,34,28,30,0,30,0,32,32,32,31,35,30,31,0,0,0,0,32,33,34,0,35,31,29,28,29,30,31,32,33,34,35,28,29,30,31,32,33,34,35,28,29,28,29,30,31,32,33,34,35,28,29,30,31,32,33,34,35,29,28,29,30,31,32,33,34,35,29,28,29,30,31,32,33,34,35,29,29,29,29,29,29,29,29,29,29,28,29,30,31,32,33,34,35,28,29,30,31,32,33,34,35,28,29,30,31,32,33,34,35,28,29,30,31,32,33,34,35,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,16,0,0,16,16,16,16,39,16,39,16,39,16,39,16,39,16,39,16,39,39,16,16,16,39,16,39,16,39,16,39,0,39,16,39,16,39,16,39,16,39,16,39,16,61,62,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,63,64,65,66,40,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,67,68,67,68,68,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,69,70,71,72,73,74,44,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,75,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,76,77,78,79,80,81,82,83,84,85,86,87,88,89,79,80,81,85,85,0,0,0,0,0,0,0,0,0,0,0,0,90,47,48,49,50,51,90,47,48,49,50,51,49,50,51,47,48,49,50,51,47,48,49,50,51,90,47,48,49,50,51,47,48,49,50,51,90,47,48,49,50,51,90,47,48,49,50,51,47,48,49,50,51,47,48,49,50,51,47,48,49,50,51,47,48,49,50,51,47,48,49,50,51,47,48,49,50,51,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,56,55,56,55,56,55,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,0,55,56,55,56,55,56,55,56,55,0,0,45,45,57,45,57,45,57,57,45,57,45,45,57,45,57,45,45,45,45,45,45,45,57,45,57,45,57,45,45,57,0,0,58,0,0,46,58,46,58,46,46,46,58,46,46,46,58,46,46,58,46,58,46,58,46,46,46,46,58,46,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52],"f":[0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[1,5],[1,5],[2,[[4,[3]]]],[6],[[6,6]],[[6,6],6],[6,6],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[7,7],[8,8],[9,9],[[]],[[]],[[]],0,0,[[],[[4,[10]]]],[[],[[4,[7]]]],[[],[[4,[8]]]],[[],[[4,[9]]]],[[],[[4,[11]]]],[[],[[4,[12]]]],[[],[[4,[13]]]],[[],[[4,[14]]]],[15,[[4,[[17,[16]]]]]],[15,[[4,[6]]]],[15,[[4,[[19,[18,6]]]]]],[1,[[4,[20,21]]]],[1,[[4,[10,21]]]],[15,[[4,[14]]]],[[7,7],22],[[8,8],22],[[9,9],22],[[12,12],22],[[13,13],22],[[14,14],22],0,[[10,23],24],[[7,23],24],[[8,23],24],[[9,23],24],[[11,23],24],[[12,23],24],[[13,23],24],[[14,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],22],[[8,8],22],[[9,9],22],[[12,12],22],[[13,13],22],[[14,14],22],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[21,23],24],[[21,23],24],[26,21],[27,21],[[]],[[]],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[28]]]],0,[[28,28],22],[[29,29],22],[[30,30],22],[[31,31],22],[[32,32],22],[[33,33],22],[[34,34],22],[[35,35],22],[[28,23],24],[[29,23],24],[[30,23],24],[[31,23],24],[[32,23],24],[[33,23],24],[[34,23],24],[[35,23],24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,29],22],0,0,0,0,0,0,0,0,[29,36],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[20,20],[[]],0,[[]],0,[[]],0,[1,[[4,[20,21]]]],0,[[]],[[],4],[[],4],[[],25],[[]],0,0,0,0,[[16,6,6],[[4,[16,37]]]],[[16,16,6],[[4,[16,37]]]],[[16,36,[38,[6]]],16],[[]],[[]],[[]],[[]],[39,39],[16,16],[[]],[[]],[[39,39],22],[[16,16],22],[[39,23],24],[[16,23],24],[[]],[[],39],[[],16],[[]],[6,16],[39],[16],[[]],[[]],[[39,39],22],[[16,16],22],0,[[16,17],[[4,[6,40]]]],0,[[16,16],[[4,[16,37]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[[]],[[]],0,0,[39],[[],22],[[6,6],6],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[41,29],[[4,[16,37]]]],[[41,29],[[4,[16,37]]]],[[41,29,[38,[16]]],[[4,[16,37]]]],0,[[]],[[]],0,0,[[],4],[[],4],[[],25],[[]],0,[[42,[38,[6]]],[[4,[29,37]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[3,23],24],[[3,23],24],[[]],[[]],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[40,40],22],[[40,23],24],[[40,23],24],[[]],[[]],[[40,40],22],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[43,43],22],[[43,23],24],[[43,23],24],[[]],[[]],[[43,43],22],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[44,44],22],[[44,23],24],[[44,23],24],[[]],[[]],[[44,44],22],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[37,37],22],[[37,23],24],[[37,23],24],[[]],[[]],[[37,37],22],[[],18],[[],4],[[],4],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[45,[[4,[37]]]],[45,[[4,[37]]]],0,0,0,0,0,0,0,0,[46],[[47,46]],[[48,46]],[[49,46]],[[50,46]],[[51,46]],[[],[[38,[39]]]],[47,[[38,[39]]]],[48,[[38,[39]]]],[49,[[38,[39]]]],[50,[[38,[39]]]],[51,[[38,[39]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,46],[[4,[[38,[16]],43]]]],[[47,16,46],[[4,[[38,[16]],43]]]],[[48,16,46],[[4,[[38,[16]],43]]]],[[49,16,46],[[4,[[38,[16]],43]]]],[[50,16,46],[[4,[[38,[16]],43]]]],[[51,16,46],[[4,[[38,[16]],43]]]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[[17,[16]],43]]]],[47,[[4,[[17,[16]],43]]]],[48,[[4,[[17,[16]],43]]]],[49,[[4,[[17,[16]],43]]]],[50,[[4,[[17,[16]],43]]]],[51,[[4,[[17,[16]],43]]]],[[52,46]],[[47,52,46]],[[48,52,46]],[[49,52,46]],[[50,52,46]],[[51,52,46]],[[]],[[]],[[]],[[]],[[]],[[22,6,53],47],[22,48],[[22,36],49],[[22,36],50],[[22,36],51],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[2,[[4,[16,43]]]],[[2,[38,[39]]]],[2,[[4,[43]]]],[[]],[20,2],[2,[[4,[44]]]],0,0,[[2,16],[[4,[37]]]],[[],4],[[],4],[[],25],0,[[]],[[2,54],[[4,[43]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[4,[55]]]],[[56,56],22],[[55,55],22],[[56,23],24],[[55,23],24],0,0,[[]],[[]],[[]],[[]],[[56,56],22],[[55,55],22],0,0,[[16,17],[[4,[36,44]]]],[55,4],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[[57,57],22],[[57,23],24],[[]],[[]],0,[[]],[[]],0,[[57,57],22],[[6,17],45],0,0,0,[45,[[4,[37]]]],0,[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[45,[[4,[37]]]],[[]],[[]],0,0,0,0,0,[[46,36,58]],[[]],[[]],[[]],[[]],0,[[],46],[[]],[[]],[[46,16],[[4,[[38,[16]],40]]]],[[46,16,16],[[4,[40]]]],[[]],[[]],[[],46],[[],4],[[],4],[[],4],[[],4],[[],25],[[],25],[46,[[4,[40]]]],0,0,[[]],[[]],0,[[52,46,[38,[36]]],39],[[]],[[]],[[52,46]],[[],52],[[]],[[]],[[52,46,16,[17,[16]]],[[4,[16,40]]]],[[],52],0,[52,[[4,[[17,[36]],40]]]],0,[[],4],[[],4],[[],25],[[]]],"p":[[3,"Path"],[3,"CairoRunner"],[4,"CairoRunError"],[4,"Result"],[6,"Result"],[3,"BigInt"],[3,"HintParams"],[3,"FlowTrackingData"],[3,"ApTracking"],[3,"ProgramJson"],[3,"Identifier"],[3,"ReferenceManager"],[3,"Reference"],[3,"ValueAddress"],[8,"Deserializer"],[4,"MaybeRelocatable"],[3,"Vec"],[3,"String"],[3,"HashMap"],[3,"Program"],[4,"ProgramError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Error"],[3,"Error"],[4,"Register"],[3,"Instruction"],[4,"Op1Addr"],[4,"Res"],[4,"PcUpdate"],[4,"ApUpdate"],[4,"FpUpdate"],[4,"Opcode"],[15,"usize"],[4,"VirtualMachineError"],[4,"Option"],[3,"Relocatable"],[4,"MemoryError"],[3,"RunContext"],[15,"i64"],[4,"RunnerError"],[4,"TraceError"],[3,"VirtualMachine"],[3,"Memory"],[3,"RangeCheckBuiltinRunner"],[3,"OutputBuiltinRunner"],[3,"HashBuiltinRunner"],[3,"BitwiseBuiltinRunner"],[3,"EcOpBuiltinRunner"],[3,"MemorySegmentManager"],[15,"u32"],[8,"Write"],[3,"RelocatedTraceEntry"],[3,"TraceEntry"],[3,"Operands"],[3,"ValidationRule"],[13,"IO"],[13,"Parse"],[13,"RelocatableValue"],[13,"Int"],[13,"Program"],[13,"VirtualMachine"],[13,"Trace"],[13,"Runner"],[13,"UnallocatedSegment"],[13,"InconsistentMemory"],[13,"MemoryValidationError"],[13,"MemoryInitializationError"],[13,"ExpectedInteger"],[13,"MemoryGet"],[13,"FailedMemoryGet"],[13,"EcOpBuiltinScalarLimit"],[13,"MemoryError"],[13,"InvalidOp1Reg"],[13,"InvalidApUpdate"],[13,"InvalidPcUpdate"],[13,"DiffAssertValues"],[13,"CantWriteReturnPc"],[13,"CantWriteReturnFp"],[13,"InvalidRes"],[13,"InvalidOpcode"],[13,"OffsetExeeded"],[13,"InconsistentAutoDeduction"],[13,"RunnerError"],[13,"InvalidHintEncoding"],[13,"MemoryError"],[13,"UnknownHint"],[8,"BuiltinRunner"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
